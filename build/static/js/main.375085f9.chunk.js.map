{"version":3,"sources":["services/notes.js","components/Notes.js","services/login.js","App.js","index.js"],"names":["baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","remove","delete","setToken","newToken","Note","note","toggleImportance","removeBook","label","important","className","content","onClick","login","credentials","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","SetShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","initialNotes","console","log","length","LoggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","NoteObject","date","Date","toISOString","Math","random","returnedNote","concat","handleLogin","loginService","setItem","stringify","setTimeout","notesToShow","filter","handle_note_change","target","value","onSubmit","type","placeholder","onChange","map","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.375085f9.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nlet token = null\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: { Authorization: token },\r\n    }\r\n    const response = await axios.post(baseUrl, newObject, config)\r\n    return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst remove = (id, newObject) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove, setToken}\r\n","import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance, removeBook }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n  const label2 = 'delete'\r\n  return (\r\n    <div>\r\n    <ul>\r\n    <li className = \"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n      <button onClick={removeBook}>{label2}</button>\r\n    </li>\r\n    </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default {login}","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport noteService from './services/notes'\nimport Note from './components/Notes'\nimport loginService from './services/login'\n\nconst Button = ({command, text}) => (\n  <button onClick={command} className = \"button\">{text}</button>\n)\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className = \"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('Book title')\n  const [showAll, SetShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(\"Some error happened..\")\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log(\"render\", notes.length, \"notes\")\n\n  useEffect(() => {\n    const LoggedUserJSON = window.localStorage.getItem('LoggedUser')\n    if (LoggedUserJSON) {\n      const user = JSON.parse(LoggedUserJSON)\n      setUser(user)\n      noteService.setToken(user.token)\n    }\n  }, [])\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const NoteObject = {\n      content: newNote,\n      date: new Date().toISOString,\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n    noteService\n      .create(NoteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'LoggedUser: ', JSON.stringify(user)\n      )\n      noteService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')   \n    }\n    catch(error) {\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n    .update(id, changedNote)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const removeBook = id => {\n    const note = notes.find(n => n.id === id)\n  \n    noteService\n    .remove(id, note)\n      .then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Note '${note.content}' was already removed from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })    \n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  const handle_note_change = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const showLoginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div className=\"loginform\">\n        <input type=\"text\"\n          placeholder=\"Enter username\"\n          value={username}\n          onChange={({target}) => setUsername(target.value)}\n        />\n      </div>\n      <div className=\"loginform\">\n        <input type=\"text\"\n          placeholder=\"Enter password\"\n          value={password}\n          onChange={({target}) => setPassword(target.value)}\n        />\n      </div>\n        <button type=\"submit\" className=\"submitButton\">Login</button>\n    </form>\n  )\n\n  const showNoteForm = () => (\n    <form onSubmit={addNote}>\n      <div>\n        <input type=\"text\"\n          placeholder = \"What's happening...\"\n          onChange = {handle_note_change}\n        />\n      </div>\n      <button className = \"submit\" type=\"submit\">Tweet</button>\n    </form>\n  )\n\n  const showImportantToggle = () => (\n    <div>\n      <button className = \"show\" onClick={() => SetShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n    </div>\n  )\n\n  const showNoteList = () => (\n    <ul>\n        {notesToShow.map(note =>\n          <Note \n          key={note.id} \n          note={note}\n          toggleImportance={() => toggleImportanceOf(note.id)}\n          removeBook={() => removeBook(note.id)}\n          />\n        )}\n    </ul>\n  )\n\n  return (\n    <div>\n      <h1>Twitter Clone:</h1>\n      <Notification message={errorMessage}/>\n      {user === null && showLoginForm()}\n      {user !== null && showNoteForm()}\n      {user !== null && showImportantToggle()}\n      {user !== null && showNoteList()}\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}